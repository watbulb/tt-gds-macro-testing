# TODO steps for each type
name: gds

on:
  push:
  workflow_dispatch:

jobs:
  gds:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build Pure Art GDS
        shell: bash
        run: |
          TOP_MODULE=$(./tt/tt_tool.py --print-top-module --openlane2)
          make tt_harden_top ttlogo
          cp runs/wokwi/final/gds/* gds/final/
          cp runs/wokwi/final/mag/* mag/final/
          cp runs/wokwi/final/lef/* lef/final/
          PURE_ART=1 TOP_NAME=$TOP_MODULE MACRO_NAME=$(TARGET_MACRO) magic -noconsole -dnull ./tcl/place_power_pins.tcl
          cp {gds,lef}/final/${TOP_MODULE}.* tt_submission/
 
  precheck:
    needs: gds
    runs-on: ubuntu-latest
    steps:
      - name: Run Tiny Tapeout Precheck
        uses: TinyTapeout/tt-gds-action/precheck@tt08
        with:
          tools-ref: tt08-micro-tiles-experiment

  gl_test:
    needs: gds
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: GL test
        uses: TinyTapeout/tt-gds-action/gl_test@tt08

  viewer:
    needs: gds
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
      - uses: TinyTapeout/tt-gds-action/viewer@tt08
